{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-05T19:32:03.104Z",
    "end": "2022-07-05T19:33:31.669Z",
    "duration": 88565,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e7860e0-0ba7-4054-bfbd-7e3c37a5c197",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3952e219-09ca-4cae-96c5-356592fe9a7d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "2a3f1086-b8fe-4501-9e9e-471885262e5d",
              "parentUUID": "3952e219-09ca-4cae-96c5-356592fe9a7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a3f1086-b8fe-4501-9e9e-471885262e5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 601,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "21ef606c-76c5-4abe-816a-279bc6568c55",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "283a0eff-ad8b-4154-9d92-2abf9742bc75",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1da43fd9-6132-4751-9dd5-33721f098837",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "937b27a0-7493-4ff0-94f3-e851ba3cde11",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b431281f-4671-48fa-9373-30fedc1d8b56",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8bc97bc4-0f8f-4bcb-a5e0-24b7dee1fc49",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "d6143d85-5910-4620-a746-88d7b86a3e0b",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "9f8bd15d-3e2f-4395-8081-88d5559358b1",
              "parentUUID": "21ef606c-76c5-4abe-816a-279bc6568c55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "283a0eff-ad8b-4154-9d92-2abf9742bc75",
            "1da43fd9-6132-4751-9dd5-33721f098837",
            "937b27a0-7493-4ff0-94f3-e851ba3cde11",
            "b431281f-4671-48fa-9373-30fedc1d8b56",
            "8bc97bc4-0f8f-4bcb-a5e0-24b7dee1fc49",
            "d6143d85-5910-4620-a746-88d7b86a3e0b",
            "9f8bd15d-3e2f-4395-8081-88d5559358b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1733,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf7b5bb4-2658-4c0b-84cf-239650749663",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c6c60446-ed81-4ceb-932d-869fa890f22d",
              "parentUUID": "bf7b5bb4-2658-4c0b-84cf-239650749663",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ff0f23cb-d22e-40b8-837d-6edf549fc649",
              "parentUUID": "bf7b5bb4-2658-4c0b-84cf-239650749663",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6c60446-ed81-4ceb-932d-869fa890f22d",
            "ff0f23cb-d22e-40b8-837d-6edf549fc649"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 537,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a451af8-63b6-4c62-b375-b927c5549d8f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "3060990c-0f60-4c75-a9e9-7a0b960ab977",
              "parentUUID": "5a451af8-63b6-4c62-b375-b927c5549d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "aedd56ba-ed56-4d39-8f63-782e93cc841c",
              "parentUUID": "5a451af8-63b6-4c62-b375-b927c5549d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e05c0893-6d2d-4939-9a1b-af62308bf38c",
              "parentUUID": "5a451af8-63b6-4c62-b375-b927c5549d8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d385d988-39c5-45c8-b987-ec3abc7f21e9",
              "parentUUID": "5a451af8-63b6-4c62-b375-b927c5549d8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3060990c-0f60-4c75-a9e9-7a0b960ab977",
            "aedd56ba-ed56-4d39-8f63-782e93cc841c",
            "e05c0893-6d2d-4939-9a1b-af62308bf38c",
            "d385d988-39c5-45c8-b987-ec3abc7f21e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 972,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "944f5bf2-11f2-4473-9d59-b95e41d1254f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "10697e2d-269d-4529-99a3-180cd767c8d5",
              "parentUUID": "944f5bf2-11f2-4473-9d59-b95e41d1254f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "3b942c74-e123-45b4-b670-0ddd6d9bd3ad",
              "parentUUID": "944f5bf2-11f2-4473-9d59-b95e41d1254f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10697e2d-269d-4529-99a3-180cd767c8d5",
            "3b942c74-e123-45b4-b670-0ddd6d9bd3ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 813,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c1d1f9af-3c26-4261-9aa4-3afa5aa573c3",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "cd9c4a5b-387a-46b2-9bc5-290a3ae2a051",
              "parentUUID": "c1d1f9af-3c26-4261-9aa4-3afa5aa573c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "3770a01e-fe4a-49d7-8d28-29439f1c10a9",
              "parentUUID": "c1d1f9af-3c26-4261-9aa4-3afa5aa573c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd9c4a5b-387a-46b2-9bc5-290a3ae2a051",
            "3770a01e-fe4a-49d7-8d28-29439f1c10a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 424,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c13157a7-3bb9-481e-9ae5-ac2cc389c149",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "8a26bf15-1a49-4252-9da8-5c710fc50031",
              "parentUUID": "c13157a7-3bb9-481e-9ae5-ac2cc389c149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "5a2e9be1-95d0-4806-a30f-ec325d55d541",
              "parentUUID": "c13157a7-3bb9-481e-9ae5-ac2cc389c149",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a26bf15-1a49-4252-9da8-5c710fc50031",
            "5a2e9be1-95d0-4806-a30f-ec325d55d541"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10002,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b9b445a5-d5d0-4665-80af-e558d14fc76a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "da2be6d2-72bb-4b6b-bdfe-bb0c2b2f85cb",
              "parentUUID": "b9b445a5-d5d0-4665-80af-e558d14fc76a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "492b22aa-56ba-4d88-ae33-dfd842961eab",
              "parentUUID": "b9b445a5-d5d0-4665-80af-e558d14fc76a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "dbb49785-38b0-4c41-bfff-4820ca9d5439",
              "parentUUID": "b9b445a5-d5d0-4665-80af-e558d14fc76a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da2be6d2-72bb-4b6b-bdfe-bb0c2b2f85cb",
            "492b22aa-56ba-4d88-ae33-dfd842961eab",
            "dbb49785-38b0-4c41-bfff-4820ca9d5439"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ccb4cf2-4b77-4ad8-aa22-2e64da36268d",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "50df7184-49f5-4a13-be7d-a1082274abe0",
              "parentUUID": "2ccb4cf2-4b77-4ad8-aa22-2e64da36268d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "dce4a98c-680a-4af0-9707-a67b52a320f4",
              "parentUUID": "2ccb4cf2-4b77-4ad8-aa22-2e64da36268d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7ccab728-9481-4d04-98fb-f5c3c55da4ab",
              "parentUUID": "2ccb4cf2-4b77-4ad8-aa22-2e64da36268d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "3b69affe-6797-462e-aea5-d32f533aea9e",
              "parentUUID": "2ccb4cf2-4b77-4ad8-aa22-2e64da36268d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50df7184-49f5-4a13-be7d-a1082274abe0",
            "dce4a98c-680a-4af0-9707-a67b52a320f4",
            "7ccab728-9481-4d04-98fb-f5c3c55da4ab",
            "3b69affe-6797-462e-aea5-d32f533aea9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a85196f7-2582-434e-997c-da29cfcfe362",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4500,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b84becaa-e4d0-4b21-9cc5-6b52bf360a59",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4473,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2d511156-1035-4ffa-bcfa-72a93022cac0",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4515,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "53c0e52d-d862-4e19-8b80-22cd7cbbac57",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4497,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "38bd2b1b-3ee7-4b70-871f-5f91a5b60937",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4539,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aee38487-abe9-42c7-bd71-538aa4aad509",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4459,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "03d3285d-4445-4448-a4ce-008f1038b0fe",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "43fe3bdf-04c7-447c-9d74-51927737782b",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4464,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "15d3e376-3612-4662-844e-7545dd95fa69",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4524,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2c563b3e-2cda-41b4-9fe2-4a45d50d6601",
              "parentUUID": "a85196f7-2582-434e-997c-da29cfcfe362",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b84becaa-e4d0-4b21-9cc5-6b52bf360a59",
            "2d511156-1035-4ffa-bcfa-72a93022cac0",
            "53c0e52d-d862-4e19-8b80-22cd7cbbac57",
            "38bd2b1b-3ee7-4b70-871f-5f91a5b60937",
            "aee38487-abe9-42c7-bd71-538aa4aad509",
            "03d3285d-4445-4448-a4ce-008f1038b0fe",
            "43fe3bdf-04c7-447c-9d74-51927737782b",
            "15d3e376-3612-4662-844e-7545dd95fa69",
            "2c563b3e-2cda-41b4-9fe2-4a45d50d6601"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40434,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "93918776-b1b1-4527-b992-20639f68ae39",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4620,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "55134efc-0376-45bb-afee-98730dda5b27",
              "parentUUID": "93918776-b1b1-4527-b992-20639f68ae39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4691,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec3539e3-8669-4b06-8b32-ef9f991d702b",
              "parentUUID": "93918776-b1b1-4527-b992-20639f68ae39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4487,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46799/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46799/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46799/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46799/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46799/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46799/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00b84ff3-40dd-4858-942d-4c78b4d04443",
              "parentUUID": "93918776-b1b1-4527-b992-20639f68ae39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "55134efc-0376-45bb-afee-98730dda5b27",
            "ec3539e3-8669-4b06-8b32-ef9f991d702b",
            "00b84ff3-40dd-4858-942d-4c78b4d04443"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "87310270-9358-407a-84e1-0524649a57d3",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 616,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46799/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46799/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46799/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46799/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46799/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46799/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46799/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "eabb74f2-9848-4c07-9541-2532d78b6b6b",
              "parentUUID": "87310270-9358-407a-84e1-0524649a57d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 524,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46799/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46799/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46799/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46799/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46799/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46799/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46799/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46799/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46799/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46799/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46799/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46799/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "93368bc8-0060-4989-bc78-2f9bf575bcc0",
              "parentUUID": "87310270-9358-407a-84e1-0524649a57d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eabb74f2-9848-4c07-9541-2532d78b6b6b",
            "93368bc8-0060-4989-bc78-2f9bf575bcc0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}